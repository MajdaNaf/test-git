package AV;
/*  RuleApplet clas

   Constructing Intelligent Agents with Java
   (C) Joseph P.Bigus and Jennifer Bigus 1997

*/


import java.awt.*;
import java.applet.*;
import java.util.* ;

public class RuleApplet extends Applet {
        
        
        // user selected a rule base
        void choice1_Clicked() {
                String rbName = choice1.getSelectedItem();
                if (rbName.equals("Acheteur"))
                        currentRuleBase = buyer; /* **************************************/
                if (rbName.equals("Vendeur"))
                        currentRuleBase = seller;

                currentRuleBase.reset(); // reset the rule base
                choice2.removeAll(); // jpb -- bug fix
                choice3.removeAll();
                Enumeration<RuleVariable> vars = currentRuleBase.variableList.elements();
                while (vars.hasMoreElements()) {
                        choice2.addItem(((RuleVariable) vars.nextElement()).name);
                }
                currentRuleBase.displayVariables(textArea3);

        }

    // user selected a variable
    void choice2_Clicked(Event event) {
       String varName = choice2.getSelectedItem() ;
       choice3.removeAll() ;

       RuleVariable rvar = (RuleVariable)currentRuleBase.variableList.get(varName);
       Enumeration labels = rvar.labels.elements();
       while (labels.hasMoreElements()) {
          choice3.addItem(((String)labels.nextElement())) ;
       }
     }
    // user selected a value for a variable
    void choice3_Clicked(Event event) {
       String varName = choice2.getSelectedItem() ;
       String varValue = choice3.getSelectedItem() ;

       RuleVariable rvar = (RuleVariable)currentRuleBase.variableList.get(varName);
       rvar.setValue(varValue) ;
       textArea3.appendText("\n '"+ rvar.name + "' prend la valeur '"+ varValue + "'") ;
     }

    // user pressed Find button -- do an infernece cycle
     void button1_Clicked(Event event) {
       String goal = textField1.getText() ;

       textArea2.appendText("\n --- Début du cycle d'inférence --- \n");
       currentRuleBase.displayVariables(textArea2) ;
       if (radioButton1.getState() == true)
           currentRuleBase.forwardChain();
       if (radioButton2.getState() == true)
           currentRuleBase.backwardChain(goal);
       currentRuleBase.displayVariables(textArea2) ;
       textArea2.appendText("\n --- Fin du cycle d'inférence --- \n");
    }
    
    // User press the Reset button
    void button2_Clicked(Event event) {

           //{{CONNECTION
           // Clear the text for TextArea
           textArea1.setText("");
           textArea2.setText("");
           textArea3.setText("");
           //}}

        currentRuleBase.reset() ;
        currentRuleBase.displayRules(textArea1);
        currentRuleBase.displayVariables(textArea3) ;
     }

     public void init() {
        super.init();

           // Note, this code is generated by Visual Cafe’
           //{{INIT_CONTROLS
           setLayout(null);
           addNotify();
           resize(624,527);
           button1 = new java.awt.Button("Trouver le but");
           button1.reshape(36,468,108,30);
           add(button1);
           button2 = new java.awt.Button("Réinitialiser");
           button2.reshape(444,468,108,30);
           add(button2);
           textArea1 = new java.awt.TextArea();
           textArea1.reshape(12,48,312,144);
           add(textArea1);
           textArea2 = new java.awt.TextArea();
           textArea2.reshape(12,216,600,168);
           add(textArea2);
           label2 = new java.awt.Label("Log");
           label2.reshape(24,192,168,24);
           add(label2);
           label1 = new java.awt.Label("Base des règles");
           label1.reshape(24,12,96,24);
           add(label1);
           choice1 = new java.awt.Choice();
           add(choice1);
           choice1.reshape(132,12,192,24);
           Group1 = new CheckboxGroup();
           radioButton1 = new java.awt.Checkbox("Chaînage avant", Group1, false);
           radioButton1.reshape(36,396,156,21);
           add(radioButton1);
           choice3 = new java.awt.Choice();
           add(choice3);
           choice3.reshape(480,36,135,24);
           label5 = new java.awt.Label("Valeur");
           label5.reshape(480,12,95,24);
           add(label5);
           choice2 = new java.awt.Choice();
           add(choice2);
           choice2.reshape(336,36,137,24);
           textArea3 = new java.awt.TextArea();
           textArea3.reshape(336,72,276,122);
           add(textArea3);
           label4 = new java.awt.Label("Variable");
           label4.reshape(336,12,109,24);
           add(label4);
           radioButton2 = new java.awt.Checkbox("Chaînage arrière",Group1, false);
           radioButton2.reshape(36,420,156,24);
           add(radioButton2);
           textField1 = new java.awt.TextField();
           textField1.reshape(324,420,142,27);
           add(textField1);
           label3 = new java.awt.Label("Goal");
           label3.reshape(324,384,80,30);
           add(label3);
           //}}

           // initialize the rule applet
           frame = new Frame("Demander à l'utilisateur") ;
           frame.resize(50,50) ;
           frame.setLocation(100,100) ;
           choice1.addItem("Acheteur") ;
           choice1.addItem("Vendeur") ;

           buyer = new RuleBase("base des règles de l'Acheteur") ;//////////////////////
           buyer.setDisplay(textArea2) ;
           initAcheteurRuleBase(buyer) ;
           currentRuleBase = buyer ;

           seller = new RuleBase("base des règles du Vendeur") ;
           seller.setDisplay(textArea2) ;
           initVendeurRuleBase(seller) ;

        // initialize textAreas and list controls
        currentRuleBase.displayRules(textArea1) ;
        currentRuleBase.displayVariables(textArea3) ;
        radioButton1.setState(true) ;
        choice1_Clicked() ; // fill variable list
     }

      // Note: this is Java 1.0.2 event model
      public boolean handleEvent(Event event) {
           if (event.target == button1 &&
               event.id == Event.ACTION_EVENT) {
                button1_Clicked(event);
                return true;
           }if (event.target == button2 &&
                event.id == Event.ACTION_EVENT) {
                button2_Clicked(event);
                return true;
           }
           if (event.target == dlg &&
                event.id == Event.ACTION_EVENT) {
                return dlg.handleEvent(event);
           }
          if (event.target == choice1 &&
               event.id == Event.ACTION_EVENT) {
                choice1_Clicked();
                return true;
          }
          if (event.target == choice2 &&
             event.id == Event.ACTION_EVENT) {
                choice2_Clicked(event);
                return true;
          }
            if (event.target == choice3 &&
                 event.id == Event.ACTION_EVENT) {
                choice3_Clicked(event);
                return true;
          }
           return super.handleEvent(event);
     }

     // Note this code is generated by Visual Cafe’
     //{{DECLARE_CONTROLS
     java.awt.Button button1;
     java.awt.Button button2;
     java.awt.TextArea textArea1;
     java.awt.TextArea textArea2;
     java.awt.Label label2;
     java.awt.Label label1;
     java.awt.Choice choice1;
     java.awt.Checkbox radioButton1;
     CheckboxGroup Group1;
     java.awt.Choice choice3;
     java.awt.Label label5;
     java.awt.Choice choice2;
     java.awt.TextArea textArea3;
     java.awt.Label label4;
     java.awt.Checkbox radioButton2;
     java.awt.TextField textField1;
     java.awt.Label label3;
     //}}

     static Frame frame ;
     static RuleVarDialog dlg ;
     static RuleBase seller ;
     static RuleBase buyer ;
     static RuleBase currentRuleBase ;

// Rule base definitions
  // initialize the Acheteur rule base
     public void initAcheteurRuleBase(RuleBase rb) {
      rb.goalClauseStack = new Stack() ; // goals and subgoals

      rb.variableList = new Hashtable() ;
      
      RuleVariable vehicleType = new RuleVariable("type de véhicule") ;
      vehicleType.setLabels("Citadine Petite_citadine") ;
      vehicleType.setPromptText("Quel est le type du véhicule ?") ;
      rb.variableList.put(vehicleType.name, vehicleType) ;

      RuleVariable produit = new RuleVariable("produit") ;
      produit.setLabels("Hyundai_Atos Peugeot_307 Renault_Twingo") ;//BMW_M3 Chevrolet_Aveo Citroen_C3 Dacia_Logan Fiat_Punto Ford_Fiesta Hyundai_Atos KIA_Picanto Mercedes_ClasseA Opel_Zafira Peugeot_207 Renault_Twingo Toyota_Yaris Volkswagen_Golf
      produit.setPromptText("Quel est le produit?") ;
      rb.variableList.put(produit.name,produit) ;

      RuleVariable moteur = new RuleVariable("moteur") ;
      moteur.setLabels("Diesel Essence GPL") ;
      moteur.setPromptText("Quel moteur ?") ;
      rb.variableList.put(moteur.name,moteur) ;

      RuleVariable color = new RuleVariable("couleur") ;
      color.setLabels("Standard Personnalisée Métalisée") ;
      color.setPromptText("Quelle est la couleur du véhicule ?") ;
      rb.variableList.put(color.name,color) ;


      RuleVariable budget = new RuleVariable("budget (DA)") ;
      budget.setLabels("70 100 150") ;
      budget.setPromptText("Quel est votre budget ?") ;
      rb.variableList.put(budget.name,budget) ;
      
      RuleVariable negociation = new RuleVariable("négociation") ;
      negociation.setLabels("oui non") ;
      negociation.setPromptText("Est-ce qu'il y a négociation ?") ;
      rb.variableList.put(negociation.name,negociation) ;
      
      //il pourra entrer une tranche de prix et demander quelles voitures correspondent
      RuleVariable prix = new RuleVariable("prix (moins de)") ;
      prix.setLabels("70 100 150") ;
      prix.setPromptText("Quel est le prix ?") ;
      rb.variableList.put(prix.name,prix) ;
      
      //on ne parle pas d'achat pour le moment, seulement de commande
      /*RuleVariable achat = new RuleVariable("achat") ;
      achat.setLabels("oui non") ;
      achat.setPromptText("Comptez-vous acheter?") ;
      rb.variableList.put(achat.name,achat) ;*/
      
      RuleVariable quantite = new RuleVariable("quantité") ;
      quantite.setLabels("1 2 3 5 10 20 30 50 100") ;
      quantite.setPromptText("Quelle quantité voulez-vous acheter ?") ;
      rb.variableList.put(quantite.name,quantite) ;
      
      RuleVariable commande = new RuleVariable("commande") ;
      commande.setLabels("oui non") ;
      commande.setPromptText("Voulez-vous commander ?") ;
      rb.variableList.put(commande.name,commande) ;
      
      RuleVariable changer_vendeur = new RuleVariable("changer vendeur") ;
      changer_vendeur.setLabels("oui non") ;
      changer_vendeur.setPromptText("Voulez-vous changer de vendeur ?") ;
      rb.variableList.put(changer_vendeur.name,changer_vendeur) ;
      
      RuleVariable changer_modele = new RuleVariable("changer modèle") ;
      changer_modele.setLabels("oui non") ;
      changer_modele.setPromptText("Voulez-vous changer de vendeur ?") ;
      rb.variableList.put(changer_modele.name,changer_modele) ;
      
      RuleVariable delai_dispo = new RuleVariable("délai de disponibilité") ;
      delai_dispo.setLabels("30 45 60 75 90 105 120") ;
      delai_dispo.setPromptText("Voulez-vous changer de vendeur ?") ;
      rb.variableList.put(delai_dispo.name,delai_dispo) ;
      
      /*RuleVariable disponible = new RuleVariable("disponible") ;
      disponible.setLabels("oui non") ;
      disponible.setPromptText("Est-ce que le véhicule est disponible ?") ;
      rb.variableList.put(disponible.name,disponible) ;

      RuleVariable num_places = new RuleVariable("nombre de places") ;
      num_places.setLabels("3 4 5 7") ;
      num_places.setPromptText("Combien de places ?");
      rb.variableList.put(num_places.name,num_places) ;

      RuleVariable num_doors = new RuleVariable("nombre de portes") ;
      num_doors.setLabels("2 3 4") ;
      num_doors.setPromptText("Combien de portes a le véhicule ?") ;
      rb.variableList.put(num_doors.name,num_doors) ;*/
      

      // Note: at this point all variables values are NULL

     Condition cEquals = new Condition("=") ;
     Condition cNotEquals = new Condition("!=") ;
     Condition cLessThan = new Condition("<") ;
     Condition cMoreThan = new Condition(">") ;

     // define rules
     rb.ruleList = new Vector() ;
     
     //BMW_M3 Fiat_Punto Ford_Fiesta Hyundai_Atos KIA_Picanto Mercedes_ClasseA Peugeot_307 Renault_Twingo Toyota_Yaris Volkswagen_Golf
     
     	/* ****************** Règles se rapportant au prix ******************/

     	/* Prix différents modèles Peugeot 307 */
     
       Rule R1 = new Rule(rb, "Prix Peugeot_307 -1-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "120")) ;
       
       Rule R2 = new Rule(rb, "Prix Peugeot_307 -2-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "125")) ;
       
       Rule R3 = new Rule(rb, "Prix Peugeot_307 -3-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "127")) ;
   
       Rule R4 = new Rule(rb, "Prix Peugeot_307 -4-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "140")) ;

       Rule R5 = new Rule(rb, "Prix Peugeot_307 -5-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "145")) ;
   
       Rule R6 = new Rule(rb, "Prix Peugeot_307 -6-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "147")) ;
       
       Rule R7 = new Rule(rb, "Prix Peugeot_307 -7-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "125")) ;
       
       Rule R8 = new Rule(rb, "Prix Peugeot_307 -8-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "130")) ;
       
       Rule R9 = new Rule(rb, "Prix Peugeot_307 -9-",
          new Clause(produit,cEquals, "Peugeot_307")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "132")) ;
       
       /* Prix différents modèles Renault Twingo */
       
       Rule R10 = new Rule(rb, "Prix Renault_Twingo -1-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "100")) ;
       
       Rule R11 = new Rule(rb, "Prix Renault_Twingo -2-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "105")) ;
       
       Rule R12 = new Rule(rb, "Prix Renault_Twingo -3-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "107")) ;
   
       Rule R13 = new Rule(rb, "Prix Renault_Twingo -4-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "120")) ;

       Rule R14 = new Rule(rb, "Prix Renault_Twingo -5-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "125")) ;
   
       Rule R15 = new Rule(rb, "Prix Renault_Twingo -6-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "127")) ;
       
       Rule R16 = new Rule(rb, "Prix Renault_Twingo -7-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "105")) ;
       
       Rule R17 = new Rule(rb, "Prix Renault_Twingo -8-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "110")) ;
       
       Rule R18 = new Rule(rb, "Prix Renault_Twingo -9-",
          new Clause(produit,cEquals, "Renault_Twingo")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "112")) ;
    	       
       
       /* Prix différents modèles Hyundai Atos */
       
       Rule R19 = new Rule(rb, "Prix Hyundai_Atos -1-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "130")) ;
       
       Rule R20 = new Rule(rb, "Prix Hyundai_Atos -2-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "135")) ;
       
       Rule R21 = new Rule(rb, "Prix Hyundai_Atos -3-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Essence"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "137")) ;
   
       Rule R22 = new Rule(rb, "Prix Hyundai_Atos -4-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "150")) ;

       Rule R23 = new Rule(rb, "Prix Hyundai_Atos -5-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "155")) ;
   
       Rule R24 = new Rule(rb, "Prix Hyundai_Atos -6-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "Diesel"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "157")) ;
       
       Rule R25 = new Rule(rb, "Prix Hyundai_Atos -7-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Standard"),
          new Clause(prix, cEquals, "135")) ;
       
       Rule R26 = new Rule(rb, "Prix Hyundai_Atos -8-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Personnalisée"),
          new Clause(prix, cEquals, "140")) ;
       
       Rule R27 = new Rule(rb, "Prix Hyundai_Atos -9-",
          new Clause(produit,cEquals, "Hyundai_Atos")  ,
          new Clause(moteur,cEquals, "GPL"),
          new Clause(color, cEquals, "Métallisée"),
          new Clause(prix, cEquals, "142")) ;
       
       /* *************** Règles relatives aux actions de l'acheteur ***************** */
       Rule R33 = new Rule(rb, "Délai de disponibilité trop long >90j",
   	        new Clause(delai_dispo,cMoreThan, "90")  ,
   	        new Clause(commande, cEquals, "non")) ;
       
       // si le délai n'est pas assez court(ni assez court, ni trop long), l'acheteur va chercher à changer ou de vendeur ou de modèle pour avoir un meilleur délais
       // on distingue 3 cas :
       // 1. s'il a déjà précisé qu'il ne veut absolument pas changer de modèle, alors il change de vendeur
       Rule R34 = new Rule(rb, "Délai de disponibilité relativement long d>60j -1-",
  	        new Clause(delai_dispo,cMoreThan, "60")  ,
  	        new Clause(changer_modele, cEquals, "non"),
  	        new Clause(changer_vendeur, cEquals, "oui")) ;
       
       // 2. s'il a déjà précisé qu'il ne veut absolument pas changer de vendeur, alors il change de modèle
       Rule R35 = new Rule(rb, "Délai de disponibilité relativement long d>60j -2-",
 	        new Clause(delai_dispo,cMoreThan, "60")  ,
 	        new Clause(changer_vendeur, cEquals, "non"),
 	        new Clause(changer_modele, cEquals, "oui"));
       
       // 3. s'il n'a rien précisé, on suppose par défaut qu'il change de vendeur
       Rule R36 = new Rule(rb, "Délai de disponibilité relativement long d>60j -3-",
	        new Clause(delai_dispo,cMoreThan, "60")  ,
	        new Clause(changer_vendeur, cEquals, "oui"));
       
       //lancement de la commande selon budget et produit choisi
       //On suppose que l'acheteur est toujours ouvert à la négociation, 
       //et que si le budget se rapporche du prix alors il lance la commande.
       
       //Produit = Peugeot_307
       Rule R37 = new Rule(rb, "Délai de disponibilité acceptable <60 -1-",
   	        new Clause(delai_dispo,cLessThan, "60")  ,
   	        new Clause(produit,cEquals, "Peugeot_307")  ,
   	        new Clause(budget,cMoreThan, "120")  ,
   	        new Clause(commande, cEquals, "oui")) ;
       
       Rule R38 = new Rule(rb, "Délai de disponibilité acceptable <60 -2-",
  	        new Clause(delai_dispo,cLessThan, "60")  ,
  	        new Clause(produit,cEquals, "Peugeot_307")  ,
  	        new Clause(budget,cLessThan, "120")  ,
  	        new Clause(budget,cMoreThan, "100")  ,
  	        new Clause(negociation, cEquals, "oui")) ;
       
       //Produit = Renault_Twingo
       Rule R39 = new Rule(rb, "Délai de disponibilité acceptable <60 -3-",
  	        new Clause(delai_dispo,cLessThan, "60")  ,
  	        new Clause(produit,cEquals, "Renault_Twingo")  ,
  	        new Clause(budget,cMoreThan, "100")  ,
  	        new Clause(commande, cEquals, "oui")) ;
          
       Rule R40 = new Rule(rb, "Délai de disponibilité acceptable <60 -4-",
 	        new Clause(delai_dispo,cLessThan, "60")  ,
 	        new Clause(produit,cEquals, "Peugeot_307")  ,
 	        new Clause(budget,cLessThan, "100")  ,
 	        new Clause(budget,cMoreThan, "80")  ,
 	        new Clause(negociation, cEquals, "oui")) ;
       
       //Produit = Hyundai_Atos
       Rule R41 = new Rule(rb, "Délai de disponibilité acceptable <60 -5-",
 	        new Clause(delai_dispo,cLessThan, "60")  ,
 	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
 	        new Clause(budget,cMoreThan, "130")  ,
 	        new Clause(commande, cEquals, "oui")) ;
             
       Rule R42 = new Rule(rb, "Délai de disponibilité acceptable <60 -6-",
	        new Clause(delai_dispo,cLessThan, "60")  ,
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(budget,cLessThan, "130")  ,
	        new Clause(budget,cMoreThan, "110")  ,
	        new Clause(negociation, cEquals, "oui")) ;
       
         //=============== REGLES A REVOIR 
         
        /*Rule R28 = new Rule(rb, "R12",
	        new Clause(budget,cMoreThan, "110")  ,
	        new Clause(prix,cLessThan, "110"),
	        new Clause(achat, cEquals, "oui")) ;
        
        Rule R29 = new Rule(rb, "R13",
	        new Clause(budget,cLessThan, "100")  ,
	        new Clause(achat, cEquals, "non")) ;
        
        Rule R30 = new Rule(rb, "R14",
	        new Clause(budget,cMoreThan, "200")  ,
	        new Clause(prix,cMoreThan, "250"),
	        new Clause(negociation, cEquals, "oui")) ;
        
        Rule R31 = new Rule(rb, "R15",
	        new Clause(budget,cLessThan, "100")  ,
	        new Clause(achat, cEquals, "non")) ;
        
        Rule R32 = new Rule(rb, "R16",
	        new Clause(budget,cLessThan, "100")  ,
	        new Clause(negociation, cEquals, "non")) ;*/
       
    
        //de_base toutes_options intermediaire personnalisee
        //0 +10 +20 +30 +35
       
     }
     
     //initialize the Vendeur rule base
     public void initVendeurRuleBase(RuleBase rb) {
     rb.goalClauseStack = new Stack() ; // goals and subgoals
     rb.variableList = new Hashtable() ;
     
     RuleVariable vehicleType = new RuleVariable("type de véhicule") ;
     vehicleType.setLabels("Berline Coupé_cabriolé 4x4 Citadine Petite_citadine") ;
     vehicleType.setPromptText("Quel est le type du véhicule ?") ;
     rb.variableList.put(vehicleType.name, vehicleType) ;
     
     RuleVariable produit = new RuleVariable("produit") ;
     produit.setLabels("BMW_M3 Chevrolet_Aveo Citroen_C3 Dacia_Logan Fiat_Punto Ford_Fiesta Hyundai_Atos KIA_Picanto Mercedes_ClasseA Opel_Zafira Peugeot_207 Renault_Twingo Toyota_Yaris Volkswagen_Golf") ;//BMW_M3 Chevrolet_Aveo Citroen_C3 Dacia_Logan Fiat_Punto Ford_Fiesta Hyundai_Atos KIA_Picanto Mercedes_ClasseA Opel_Zafira Peugeot_207 Renault_Twingo Toyota_Yaris Volkswagen_Golf
     produit.setPromptText("Quel est le produit?") ;
     rb.variableList.put(produit.name,produit) ;
     
     RuleVariable quantite = new RuleVariable("quantité") ;
     quantite.setLabels("1 2 3 5 10 20 30 50 100") ;
     quantite.setPromptText("Quelle quantité voulez-vous acheter ?") ;
     rb.variableList.put(quantite.name,quantite) ;

     RuleVariable moteur = new RuleVariable("moteur") ;
     moteur.setLabels("Diesel Essence GPL") ;
     moteur.setPromptText("Quel moteur ?") ;
     rb.variableList.put(moteur.name,moteur) ;

     RuleVariable color = new RuleVariable("couleur") ;
     color.setLabels("Standard Personnalisée Métalisée") ;
     color.setPromptText("Quelle est la couleur du véhicule ?") ;
     rb.variableList.put(color.name,color) ;
     
     RuleVariable boiteV = new RuleVariable("boite à vitesse") ;
     boiteV.setLabels("automatique manuelle") ;
     boiteV.setPromptText("Quelle boite à vitesse ?") ;
     rb.variableList.put(boiteV.name,boiteV) ;

     RuleVariable options = new RuleVariable("options") ;
     options.setLabels("de_base toutes_options intermediaire personnalisee") ;
     options.setPromptText("Quelle catégorie d'options ?") ;
     rb.variableList.put(options.name,options) ;
     
     RuleVariable stock = new RuleVariable("stock") ;
     stock.setLabels("rempli moitié_vide vide") ;
     stock.setPromptText("Quel est l'état du stock ?");
     rb.variableList.put(stock.name,stock) ;
     
     RuleVariable alimenter_stock = new RuleVariable("alimenter le stock") ;
     alimenter_stock.setLabels("oui non") ;
     alimenter_stock.setPromptText("Faut-il alimenter le stock ?");
     rb.variableList.put(alimenter_stock.name,alimenter_stock) ;

     RuleVariable avantage = new RuleVariable("avantage") ;
     avantage.setLabels("vidange_gratuite assurance_offerte aucun") ;
     avantage.setPromptText("Quel est l'avantage ?");
     rb.variableList.put(avantage.name, avantage) ;
     
     RuleVariable profil = new RuleVariable("profil") ;
     profil.setLabels("Habitué Grossiste Particulier") ;
     profil.setPromptText("Quel type d'acheteur c'est?");
     rb.variableList.put(profil.name,profil) ;
     
     RuleVariable licence = new RuleVariable("Licence Moujahidine") ;
     licence.setLabels("oui non") ;
     licence.setPromptText("Est-ce que l'acheteur bénéficie de la licence pour moujahidine ?");
     rb.variableList.put(licence.name,licence) ;
     
     RuleVariable ancienM = new RuleVariable("Ancien Moujahid") ;
     ancienM.setLabels("oui non") ;
     ancienM.setPromptText("Est-ce que l'acheteur est un ancien moujahid?");
     rb.variableList.put(ancienM.name,ancienM) ;
     
     RuleVariable disponible = new RuleVariable("disponible") ;
     disponible.setLabels("oui non") ;
     disponible.setPromptText("Est-ce que le véhicule est disponible ?") ;
     rb.variableList.put(disponible.name,disponible) ;
     
     RuleVariable vente = new RuleVariable("vente") ;
     vente.setLabels("oui non") ;
     vente.setPromptText("Est-ce qu'il y a vente ou pas ?") ;
     rb.variableList.put(vente.name,vente) ;
     
     RuleVariable difference = new RuleVariable("difference de prix") ;
     difference.setLabels("-seuil +seuil") ;
     difference.setPromptText("La différence de prix dépasse-t-elle le seuil ?") ;
     rb.variableList.put(difference.name,difference) ;
     
     RuleVariable negociation = new RuleVariable("négociation") ;
     negociation.setLabels("oui non") ;
     negociation.setPromptText("Est-ce qu'il y a négociation ?") ;
     rb.variableList.put(negociation.name,negociation) ;
     
     RuleVariable promo = new RuleVariable("promotion") ;
     promo.setLabels("soldes salon_auto anniversaire_marque") ;
     promo.setPromptText("Quelle promotion appliquer ?") ;
     rb.variableList.put(promo.name,promo) ;
     
     RuleVariable date_anniv = new RuleVariable("date anniversaire") ;
     promo.setLabels("oui non") ;
     promo.setPromptText("Est-ce que la date correspond à l'anniversaire de la marque ?") ;
     rb.variableList.put(date_anniv.name,date_anniv) ;
     
     RuleVariable stats = new RuleVariable("statistiques vente") ;
     stats.setLabels("bonnes moyennes mauvaises") ;
     stats.setPromptText("Est-ce que le véhicule s'est bien vendu ?") ;
     rb.variableList.put(stats.name,stats) ;
     
     RuleVariable prix = new RuleVariable("prix") ;
     prix.setLabels("100 150 200 250 300 500 1000") ;
     prix.setPromptText("Quel est le prix ?") ;
     rb.variableList.put(prix.name,prix) ;
     
     RuleVariable prix_suppV = new RuleVariable("prix supplémentaire BV") ; //boite à vitesse
     prix_suppV.setLabels("0 +20") ;
     prix_suppV.setPromptText("Quel est la valeur du prix supplémentaire BV?") ;
     rb.variableList.put(prix_suppV.name,prix_suppV) ;
     
     RuleVariable prix_suppO = new RuleVariable("prix supplémentaire Op") ;
     prix_suppO.setLabels("0 +10 +20 +30") ;
     prix_suppO.setPromptText("Quel est la valeur du prix supplémentaire Op?") ;
     rb.variableList.put(prix_suppO.name,prix_suppO) ;
     
     
     
     // Note: at this point all variables values are NULL

     Condition cEquals = new Condition("=") ;
     Condition cNotEquals = new Condition("!=") ;
     Condition cLessThan = new Condition("<") ;
     Condition cMoreThan = new Condition(">") ;

     // define rules 
     rb.ruleList = new Vector();
     
     /* ----------- règles relatives aux profils ------------- */
     
     Rule VR1 = new Rule(rb, "Avantage selon profil -1-",
        new Clause(profil,cEquals, "Habitué")  ,
        new Clause(avantage,cEquals, "vidange_gratuite")) ;
     
     Rule VR2 = new Rule(rb, "Avantage selon profil -2-",
        new Clause(profil,cEquals, "Grossiste")  ,
        new Clause(avantage,cEquals, "assurance_offerte")) ;
     
     Rule VR20 = new Rule(rb, "Avantage selon profil -3-",
 	        new Clause(profil,cEquals, "Particulier")  ,
 	        new Clause(avantage,cEquals, "aucun")) ;
  
     /* ----------- règles relatives à la gestion de stock------------- */

     Rule VR3 = new Rule(rb, "Gestion de stock -1-",
        new Clause(stock,cEquals, "vide")  ,
        new Clause(alimenter_stock,cEquals, "oui")) ;
     
     Rule VR4 = new Rule(rb, "Gestion de stock -2-",
    	        new Clause(stock,cEquals, "moitié_vide")  ,
    	        new Clause(alimenter_stock,cEquals, "oui")) ;
     
     Rule VR5 = new Rule(rb, "Gestion de stock -3-",
        new Clause(stock,cEquals, "rempli")  ,
        new Clause(alimenter_stock,cEquals, "non")) ;
     
     /* ----------- règles relatives au seuil (négociation / vente) ------------- */
     
     Rule VR6 = new Rule(rb, "Déroulement selon une différence +seuil -1-",
        new Clause(difference,cEquals, "+seuil")  , 
        new Clause(negociation,cEquals, "oui")) ;

     Rule VR7 = new Rule(rb, "Déroulement selon une différence +seuil -2-",
        new Clause(difference,cEquals, "+seuil")  ,
        new Clause(disponible,cEquals, "oui") , 
        new Clause(vente,cEquals, "oui")) ;

     Rule VR10 = new Rule(rb, "Déroulement selon une différence +seuil -3-",
        new Clause(difference,cEquals, "+seuil")  ,
        new Clause(disponible,cEquals, "non") , 
        new Clause(vente,cEquals, "non")) ;
     
     Rule VR8 = new Rule(rb, "Déroulement selon une différence -seuil -1-",
        new Clause(difference,cEquals, "-seuil")  , 
        new Clause(negociation,cEquals, "non")) ;
    
     Rule VR9 = new Rule(rb, "Déroulement selon une différence -seuil -2-",
        new Clause(difference,cEquals, "-seuil")  ,
        new Clause(vente,cEquals, "non")) ;
     
     
     
     /* ----------- règles relatives aux prix des voitures------------- */
     
     /* ---------Prix BMW_M3-----------*/
     
     Rule VR101 = new Rule(rb, "Prix BMW_M3 -1-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "300")) ;
     
     Rule VR102 = new Rule(rb, "Prix BMW_M3 -2-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Essence"),
         new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "310")) ;
     
     Rule VR103 = new Rule(rb, "Prix BMW_M3 -3-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Essence"),
         new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "315")) ;
     
     Rule VR104 = new Rule(rb, "Prix BMW_M3 -4-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "350")) ;
     
     Rule VR105 = new Rule(rb, "Prix BMW_M3 -5-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "360")) ;
     
     Rule VR106 = new Rule(rb, "Prix BMW_M3 -6-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "365")) ;
     
     Rule VR107 = new Rule(rb, "Prix BMW_M3 -7-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "340")) ;
     
     Rule VR108 = new Rule(rb, "Prix BMW_M3 -8-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "350")) ;
     
     Rule VR109 = new Rule(rb, "Prix BMW_M3 -9-",
	     new Clause(produit,cEquals, "BMW_M3")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "355")) ;

     /* Prix différents modèles Peugeot 307 */
     
     Rule VR111 = new Rule(rb, "Prix Peugeot_307 -1-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "120")) ;
     
     Rule VR112 = new Rule(rb, "Prix Peugeot_307 -2-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "125")) ;
     
     Rule VR113 = new Rule(rb, "Prix Peugeot_307 -3-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "127")) ;
 
     Rule VR114 = new Rule(rb, "Prix Peugeot_307 -4-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "140")) ;

     Rule VR115 = new Rule(rb, "Prix Peugeot_307 -5-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "145")) ;
 
     Rule VR116 = new Rule(rb, "Prix Peugeot_307 -6-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "147")) ;
     
     Rule VR117 = new Rule(rb, "Prix Peugeot_307 -7-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "125")) ;
     
     Rule VR118 = new Rule(rb, "Prix Peugeot_307 -8-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "130")) ;
     
     Rule VR119 = new Rule(rb, "Prix Peugeot_307 -9-",
        new Clause(produit,cEquals, "Peugeot_307")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "132")) ;
     
     /* Prix différents modèles Renault Twingo */
     
     Rule VR121 = new Rule(rb, "Prix Renault_Twingo -1-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "100")) ;
     
     Rule VR122 = new Rule(rb, "Prix Renault_Twingo -2-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "105")) ;
     
     Rule VR123 = new Rule(rb, "Prix Renault_Twingo -3-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Essence"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "107")) ;
 
     Rule VR124 = new Rule(rb, "Prix Renault_Twingo -4-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "120")) ;

     Rule VR125 = new Rule(rb, "Prix Renault_Twingo -5-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "125")) ;
 
     Rule VR126 = new Rule(rb, "Prix Renault_Twingo -6-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "Diesel"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "127")) ;
     
     Rule VR127 = new Rule(rb, "Prix Renault_Twingo -7-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Standard"),
        new Clause(prix, cEquals, "105")) ;
     
     Rule VR128 = new Rule(rb, "Prix Renault_Twingo -8-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Personnalisée"),
        new Clause(prix, cEquals, "110")) ;
     
     Rule VR129 = new Rule(rb, "Prix Renault_Twingo -9-",
        new Clause(produit,cEquals, "Renault_Twingo")  ,
        new Clause(moteur,cEquals, "GPL"),
        new Clause(color, cEquals, "Métallisée"),
        new Clause(prix, cEquals, "112")) ;
     
	  
	  /* ---------Prix Toyota_Yaris-----------*/
	
	  Rule VR131 = new Rule(rb, "Prix Toyota_Yaris -1-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "120")) ;
	  
	  Rule VR132 = new Rule(rb, "Prix Toyota_Yaris -2-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "125")) ;
	  
	  Rule VR133 = new Rule(rb, "Prix Toyota_Yaris -3-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "128")) ;
	  
	  Rule VR134 = new Rule(rb, "Prix Toyota_Yaris -4-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "130")) ;
	  
	  Rule VR135 = new Rule(rb, "Prix Toyota_Yaris -5-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "135")) ;
	  
	  Rule VR136 = new Rule(rb, "Prix Toyota_Yaris -6-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "138")) ;
	  
	  Rule VR137 = new Rule(rb, "Prix Toyota_Yaris -7-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "140")) ;
	  
	  Rule VR138 = new Rule(rb, "Prix Toyota_Yaris -8-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "145")) ;
	  
	  Rule VR139 = new Rule(rb, "Prix Toyota_Yaris -9-",
	     new Clause(produit,cEquals, "Toyota_Yaris")  ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "148")) ;
  
	  /* ---------Prix Fiat_Punto-----------*/
	
	  Rule VR141 = new Rule(rb, "Prix Fiat_Punto -1-",
	     new Clause(produit,cEquals, "Fiat_Punto")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "100")) ;
	  
	  /* ---------Prix Ford_Fiesta-----------*/
	
	   Rule VR151 = new Rule(rb, "Prix Ford_Fiesta -1-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "130")) ;
	   
	   Rule VR152 = new Rule(rb, "Prix Ford_Fiesta -2-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "136")) ;
   
	   Rule VR153 = new Rule(rb, "Prix Ford_Fiesta -3-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Essence"),
	        new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "138")) ;
	   
	   Rule VR154 = new Rule(rb, "Prix Ford_Fiesta -4-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "135")) ;
	   
	   Rule VR155 = new Rule(rb, "Prix Ford_Fiesta -5-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "141")) ;
	   
	   Rule VR156 = new Rule(rb, "Prix Ford_Fiesta -6-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "143")) ;
	   
	   Rule VR157 = new Rule(rb, "Prix Ford_Fiesta -7-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Standard"),
	     new Clause(prix, cEquals, "138")) ;
	   
	   Rule VR158 = new Rule(rb, "Prix Ford_Fiesta -8-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "144")) ;
	   
	   Rule VR159 = new Rule(rb, "Prix Ford_Fiesta -9-",
	     new Clause(produit,cEquals, "Ford_Fiesta") ,
	     new Clause(moteur,cEquals, "GPL"),
	     new Clause(color, cEquals, "Métallisée"),
	     new Clause(prix, cEquals, "146")) ;
	   
	  /* Prix différents modèles Hyundai Atos */
	     
	     Rule VR161 = new Rule(rb, "Prix Hyundai_Atos -1-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Essence"),
	        new Clause(color, cEquals, "Standard"),
	        new Clause(prix, cEquals, "130")) ;
	     
	     Rule VR162 = new Rule(rb, "Prix Hyundai_Atos -2-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Essence"),
	        new Clause(color, cEquals, "Personnalisée"),
	        new Clause(prix, cEquals, "135")) ;
	     
	     Rule VR163 = new Rule(rb, "Prix Hyundai_Atos -3-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Essence"),
	        new Clause(color, cEquals, "Métallisée"),
	        new Clause(prix, cEquals, "137")) ;
	 
	     Rule VR164 = new Rule(rb, "Prix Hyundai_Atos -4-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Diesel"),
	        new Clause(color, cEquals, "Standard"),
	        new Clause(prix, cEquals, "150")) ;

	     Rule VR165 = new Rule(rb, "Prix Hyundai_Atos -5-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Diesel"),
	        new Clause(color, cEquals, "Personnalisée"),
	        new Clause(prix, cEquals, "155")) ;
	 
	     Rule VR166 = new Rule(rb, "Prix Hyundai_Atos -6-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "Diesel"),
	        new Clause(color, cEquals, "Métallisée"),
	        new Clause(prix, cEquals, "157")) ;
	     
	     Rule VR167 = new Rule(rb, "Prix Hyundai_Atos -7-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "GPL"),
	        new Clause(color, cEquals, "Standard"),
	        new Clause(prix, cEquals, "135")) ;
	     
	     Rule VR168 = new Rule(rb, "Prix Hyundai_Atos -8-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "GPL"),
	        new Clause(color, cEquals, "Personnalisée"),
	        new Clause(prix, cEquals, "140")) ;
	     
	     Rule VR169 = new Rule(rb, "Prix Hyundai_Atos -9-",
	        new Clause(produit,cEquals, "Hyundai_Atos")  ,
	        new Clause(moteur,cEquals, "GPL"),
	        new Clause(color, cEquals, "Métallisée"),
	        new Clause(prix, cEquals, "142")) ;
	   
	   /*/* ---------Prix KIA_Picanto-----------*/
	
	    Rule VR171 = new Rule(rb, "Prix KIA_Picanto -1-",
	     new Clause(produit,cEquals, "KIA_Picanto")  ,
	     new Clause(moteur,cEquals, "Essence"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "130")) ;
	    
	   /* ---------Prix Mercedes_ClasseA-----------*/
	
	   Rule VR181 = new Rule(rb, "Prix Mercedes_ClasseA -1-",
	     new Clause(produit,cEquals, "Mercedes_ClasseA")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "300")) ;
	   
	   /* ---------Prix Volkswagen_Golf-----------*/
	   
	   Rule VR191 = new Rule(rb, "Prix Volkswagen_Golf -1-",
	     new Clause(produit,cEquals, "Volkswagen_Golf")  ,
	     new Clause(moteur,cEquals, "Diesel"),
	     new Clause(color, cEquals, "Personnalisée"),
	     new Clause(prix, cEquals, "200")) ;
	   
	   /* ----------- règles relatives au choix de la boîte à vitesse------------- */
     
     Rule V30 = new Rule(rb, "Prix supp selon type de Boîte à vitesse -1-",
        new Clause(boiteV,cEquals, "manuelle")  ,
        new Clause(prix_suppV, cEquals, "0")) ;
         
     Rule V31 = new Rule(rb, "Prix supp selon type de Boîte à vitesse -2-",
        new Clause(boiteV,cEquals, "automatique")  ,
        new Clause(prix_suppV, cEquals, "+20")) ;
     
     /* ----------- règles relatives aux options------------- */
     
     Rule V32 = new Rule(rb, "Prix supp selon options choisies -1-",
        new Clause(options,cEquals, "de_base")  ,
        new Clause(prix_suppO, cEquals, "0")) ;
     
     Rule V33 = new Rule(rb, "Prix supp selon options choisies -2-",
        new Clause(options,cEquals, "toutes_options")  ,
        new Clause(prix_suppO, cEquals, "+20")) ;
     
     Rule V34 = new Rule(rb, "Prix supp selon options choisies -3-",
        new Clause(options,cEquals, "intermediaire")  ,
        new Clause(prix_suppO, cEquals, "+10")) ;
     
     Rule V35 = new Rule(rb, "Prix supp selon options choisies -4-",
        new Clause(options,cEquals, "personnalisee")  ,
        new Clause(prix_suppO, cEquals, "+30")) ; 
     
     /* ------------- règles relatives aux promotions -------------- */
     
     Rule V36 = new Rule(rb, "Promotion selon statistiques de vente -1-",
        new Clause(stats,cEquals, "mauvaises")  ,
        new Clause(promo, cEquals, "soldes")) ; 
     
     Rule V37 = new Rule(rb, "Promotion selon statistiques de vente -2-",
        new Clause(stats,cEquals, "moyennes")  ,
        new Clause(promo, cEquals, "salon_auto")) ;
     
     //dans le sens où il n'y aura que cette promotion
     Rule V38 = new Rule(rb, "Promotion anniversaire",
        new Clause(date_anniv,cEquals, "oui")  ,
        new Clause(promo, cEquals, "anniversaire_marque")) ;
     
     /* ------------- règles relatives à l'attribution de licence moujahidine -------------- */
     
     Rule V40 = new Rule(rb, "Licence moujahidine -1-",
        new Clause(ancienM,cEquals, "oui")  ,
        new Clause(licence, cEquals, "oui")) ; 
     
     Rule V41 = new Rule(rb, "Licence moujahidine -2-",
        new Clause(ancienM,cEquals, "non")  ,
        new Clause(licence, cEquals, "non")) ; 
     
     
     /* ------------ règle pour le profil : grossiste ---------- */
     
     Rule V42 = new Rule(rb, "Grossiste",
        new Clause(quantite,cMoreThan, "3")  ,
        new Clause(profil, cEquals, "grossiste")) ;
 
     
     }


  // display dialog to get user value for a variable
     static public String waitForAnswer(String prompt, String labels) {

          // position dialog over parent dialog
         Point p = frame.getLocation() ;
         dlg = new RuleVarDialog(frame, true) ;
         dlg.label1.setText("   " + prompt + "\n  (" + labels + ")");
         dlg.setLocation(400, 250) ;
         dlg.show() ;
         String ans = dlg.getText() ;
         return ans ;
     }




}
